import asyncio
import random

from aiogram.dispatcher import FSMContext
from aiogram.types.chat import ChatType

from api import currency_parser
from api.api import get_news
from data import db
from keyboards.inline import group_keyboards
from keyboards.reply.default_keyboards import default_group_markup
from loader import dp, types
from settings.group_settings import changer_group_params
from settings.group_settings import group_template_messages as group_tmp_msg
from states.params import GroupParams


@dp.message_handler(ChatType.is_group_or_super_group, is_chat_admin=True, commands=['start', 'help'])
@dp.throttled(rate=3)
async def show_information_to_group(message: types.Message):
    group_id = message.chat.id
    await db.add_new_group(group_id)

    await message.answer(group_tmp_msg.welcome_message, reply_markup=default_group_markup)


@dp.message_handler(ChatType.is_group_or_super_group, is_chat_admin=True, text='üßê–ù–æ–≤–æ—Å—Ç–∏')
@dp.throttled(rate=3)
async def group_send_news(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ –∫–Ω–æ–ø–∫—É"""
    group_id = message.chat.id
    await db.add_new_group(group_id)

    section = 'news_topics'
    news_topics = await db.get_group_parameter(group_id, section)
    news_topics = news_topics.split(', ')

    section = 'quantity_news'
    quantity_news = await db.get_group_parameter(group_id, section)

    for news_number in range(quantity_news):
        news = get_news(random.choice(news_topics), quantity_news, news_number)
        await message.answer(news, reply_markup=default_group_markup)

        # –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ "/set_news_topic" –≤ news - –∑–Ω–∞—á–∏—Ç, –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –±–æ–ª—å—à–µ –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–µ
        # –Ω–∞–π–¥–µ–Ω–æ -> –≤—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞
        if '/set_news_topic' in news:
            break
        await asyncio.sleep(1)


@dp.message_handler(ChatType.is_group_or_super_group, is_chat_admin=True, text='üëî–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç')
@dp.throttled(rate=3)
async def group_send_valutes(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç –ø–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ –∫–Ω–æ–ø–∫—É"""
    group_id = message.chat.id
    await db.add_new_group(group_id)

    message_to_user = currency_parser.get_base_message() + '\n'
    message_to_user += currency_parser.get_detailed_message()
    await message.answer(message_to_user, reply_markup=default_group_markup)


@dp.message_handler(ChatType.is_group_or_super_group, is_chat_admin=True, commands='set_time')
@dp.throttled(rate=3)
async def set_group_time(message: types.Message):
    group_id = message.chat.id
    await db.add_new_group(group_id)

    await message.reply('–í–≤–µ–¥–∏—Ç–µ —á–∞—Å—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é + –ø—Ä–æ–±–µ–ª, –≤ –∫–æ—Ç–æ—Ä—ã–µ –≤ —á–∞—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è '
                        '–Ω–æ–≤–æ—Å—Ç–∏. –ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞: <b>8, 9, 12, 20</b>', reply_markup=default_group_markup)

    await GroupParams.SetHours.set()


@dp.message_handler(state=GroupParams.SetHours)
async def group_setting_time_handler(message: types.Message, state: FSMContext):
    group_id = message.chat.id
    await db.add_new_group(group_id)

    new_time = message.text

    message_to_group = await changer_group_params.change_time(group_id, new_time)
    await message.reply(message_to_group, reply_markup=default_group_markup)

    await state.finish()


@dp.message_handler(ChatType.is_group_or_super_group, is_chat_admin=True, commands='set_news_topic')
async def group_set_news_topics(message: types.Message):
    """–ò–∑–º–µ–Ω—è–µ—Ç –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–æ, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –æ—Ç–±–∏—Ä–∞—é—Ç—Å—è –Ω–æ–≤–æ—Å—Ç–∏"""
    group_id = message.chat.id
    await db.add_new_group(group_id)

    await message.reply('–í–≤–µ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é + –ø—Ä–æ–±–µ–ª —Ç–µ–º—ã –Ω–æ–≤–æ—Å—Ç–µ–π, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –≥—Ä—É–ø–ø–∞ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏.\n'
                        '–ü—Ä–∏–º–µ—Ä: <i>–†–æ—Å—Å–∏—è, —ç–∫–æ–Ω–æ–º–∏–∫–∞, –±–∏–∑–Ω–µ—Å, —Ñ—É—Ç–±–æ–ª</i>', reply_markup=default_group_markup)

    await GroupParams.SetNewsTopics.set()


@dp.message_handler(state=GroupParams.SetNewsTopics)
async def group_setting_news_topics_handler(message: types.Message, state: FSMContext):
    group_id = message.chat.id
    new_news_topics = message.text

    message_to_group = await changer_group_params.change_news_topics(group_id, new_news_topics)
    await message.reply(message_to_group, reply_markup=default_group_markup)

    await state.finish()


@dp.message_handler(ChatType.is_group_or_super_group, is_chat_admin=True, commands='set_quantity_news')
@dp.throttled(rate=3)
async def group_set_quantity_news_buttons(message: types.Message):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏"""
    group_id = message.chat.id
    await db.add_new_group(group_id)

    await message.answer('–í—ã–±–µ—Ä–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤–æ—Å—Ç–µ–π, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –≥—Ä—É–ø–ø–∞. –ê–¥–º–∏–Ω, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª '
                         '–∏–∑–º–µ–Ω—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>–û—Ç–º–µ–Ω–∞</b>',
                         reply_markup=group_keyboards.quantity_news_markup)


@dp.callback_query_handler(is_chat_admin=True, text_contains='group_news_')
async def group_change_quantity_news(call: types.CallbackQuery):
    group_id = call.message.chat.id
    await db.add_new_group(group_id)

    callback_data = str(call.data).replace('group_news_', '')

    if callback_data.isdigit():
        section = 'quantity_news'

        parameter = callback_data
        await db.change_group_parameter(group_id, section, parameter)

        message_to_chat = f'‚úî–¢–µ–ø–µ—Ä—å, —á–∞—Ç –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ <b>{callback_data}</b> –∑–∞ —Ä–∞–∑!'
        await call.message.answer(message_to_chat)

    else:
        await call.message.answer(f'<b>–î–µ–π—Å—Ç–≤–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–æ</b>, —Å–∫—Ä—ã–≤–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ÉüòÉ')

    await call.message.edit_reply_markup(reply_markup=None)


@dp.message_handler(ChatType.is_group_or_super_group, is_chat_admin=True, commands='set_status')
@dp.throttled(rate=3)
async def group_set_status(message: types.Message):
    group_id = message.chat.id
    await db.add_new_group(group_id)

    message_to_group = await changer_group_params.change_status(group_id)
    await message.reply(message_to_group, reply_markup=default_group_markup)


@dp.message_handler(ChatType.is_group_or_super_group, is_chat_admin=True, commands='check_params')
@dp.throttled(rate=3)
async def check_group_params(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    group_id = message.chat.id
    await db.add_new_group(group_id)

    user_params = await db.get_all_group_info(group_id)
    await message.answer(f'–û—Ç–ø—Ä–∞–≤–ª—è—é —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≥—Ä—É–ø–ø—ã:\n\n{user_params}')


@dp.message_handler(ChatType.is_group_or_super_group, is_chat_admin=True, commands='reset')
@dp.throttled(rate=3)
async def user_reset_settings(message: types.Message):
    group_id = message.chat.id
    await db.add_new_group(group_id)

    time_added = await db.get_group_parameter(group_id, 'time_added')

    await db.delete_group_info(group_id)

    await message.answer('‚úî<i>–°—Ç–∞—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!</i>\n'
                         '‚úî<i>–ù–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!</i>\n\n'
                         '‚úî<i>–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /check_params</i>',
                         reply_markup=default_group_markup)

    await db.add_new_group(group_id)
    await db.change_group_parameter(group_id, 'time_added', time_added)


@dp.message_handler(ChatType.is_group_or_super_group, is_chat_admin=True, commands=['set_city', 'donate'])
@dp.throttled(rate=5)
async def private_chat_command(message: types.Message):
    group_id = message.chat.id
    await db.add_new_group(group_id)

    await message.reply('<b>–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –õ–°</b>', reply_markup=default_group_markup)
