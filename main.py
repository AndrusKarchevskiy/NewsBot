import logging

from aiogram import Bot, Dispatcher, executor, types

from pyowm import OWM  # API –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–≥–æ–¥–æ–π
from newsapi import NewsApiClient  # API –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏

import time

from data import db  # –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö

from settings import keys  # –ú–æ–¥—É–ª—å, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö—Ä–∞–Ω—è—Ç—Å—è –¢–æ–∫–µ–Ω—ã –æ—Ç API, "security" –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
from settings import template_messages  # –ú–æ–¥—É–ª—å, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö—Ä–∞–Ω—è—Ç—Å—è –±–æ–ª—å—à–∏–µ, –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è
from settings.api import get_news, get_weather  # –ú–æ–¥—É–ª—å, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç —Å API –ø–æ–≥–æ–¥—ã, –Ω–æ–≤–æ—Å—Ç–µ–π
# –ú–æ–¥—É–ª—å, –≤ –∫–æ—Ç–æ—Ä–æ–º –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å –ø–æ —Å–º–µ–Ω–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞, –ø–∞—Ä–∞–º–µ—Ç—Ä, –µ—Å–ª–∏ –≤–∞–ª–∏–¥–µ–Ω, –∑–∞–Ω–æ—Å–∏—Ç—Å—è –≤ –ë–î
from settings.changer_params import change_time, change_city, change_news_topic, change_status
from settings.getter_info import get_all_user_info

logging.basicConfig(level=logging.INFO)

owm = OWM(keys.OWM_TOKEN, language='ru')
news_api = NewsApiClient(api_key=keys.NEWS_TOKEN)

bot = Bot(token=keys.BOT_TOKEN, parse_mode=types.ParseMode.HTML)
dp = Dispatcher(bot)


@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    """–í—ã–≤–æ–¥–∏—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç 'reply' –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É"""
    user_id = message.from_user.id
    user_name = str(message.from_user.full_name)
    db.add_new_user(user_id, user_name)

    await message.reply('<b>ü§ù–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {0.first_name}ü§ù!</b>'.format(message.from_user))

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

    item1 = types.KeyboardButton('üå§–ü–æ–≥–æ–¥–∞')
    item2 = types.KeyboardButton('üßê–ù–æ–≤–æ—Å—Ç–∏')

    markup.add(item1, item2)
    await message.answer(template_messages.welcome_message, reply_markup=markup)


@dp.message_handler(commands=['help'])
async def show_information(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    user_id = message.from_user.id
    user_name = str(message.from_user.full_name)
    db.add_new_user(user_id, user_name)

    await message.answer(template_messages.information_message)


@dp.message_handler(regexp='üå§–ü–æ–≥–æ–¥–∞')
async def send_weather(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–≥–æ–¥—É –ø–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ –∫–Ω–æ–ø–∫—É"""
    user_id = message.from_user.id
    user_name = str(message.from_user.full_name)
    db.add_new_user(user_id, user_name)

    section = 'progress'
    parameter = 'b_weather'
    db.change_user_parameter(user_id, section, parameter)

    section = 'city'
    city = db.get_user_parameter(user_id, section)
    try:
        weather = get_weather(city)
        await message.answer(weather)

    except Exception as error:
        print(error)
        await message.answer('ü§î–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, <b>–ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞</b> –≤–æ –≤—Ä–µ–º—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, '
                             '–ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')


@dp.message_handler(regexp='üßê–ù–æ–≤–æ—Å—Ç–∏')
async def send_news(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ –∫–Ω–æ–ø–∫—É"""
    user_id = message.from_user.id
    user_name = str(message.from_user.full_name)
    db.add_new_user(user_id, user_name)

    section = 'progress'
    parameter = 'b_news'
    db.change_user_parameter(user_id, section, parameter)

    section = 'news_topic'
    news_topic = db.get_user_parameter(user_id, section)

    section = 'quantity_news'
    quantity_news = db.get_user_parameter(user_id, section)

    news_number = 0

    while news_number < quantity_news:
        news = get_news(news_topic, quantity_news, news_number)
        await message.answer(news)

        # –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ "/set_news_topic" –≤ news - –∑–Ω–∞—á–∏—Ç, –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –±–æ–ª—å—à–µ –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–µ
        # –Ω–∞–π–¥–µ–Ω–æ -> –≤—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞
        if '/set_news_topic' in news:
            break
        time.sleep(1)
        news_number += 1


@dp.message_handler(commands='set_time')
async def set_time(message: types.Message):
    """–ò–∑–º–µ–Ω—è–µ—Ç –≤—Ä–µ–º—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–≥–æ–¥—ã –∏ –Ω–æ–≤–æ—Å—Ç–µ–π"""
    user_id = message.from_user.id
    user_name = str(message.from_user.full_name)
    db.add_new_user(user_id, user_name)

    section = 'progress'
    parameter = 'set_time'
    db.change_user_parameter(user_id, section, parameter)

    if message.text == '/set_time':
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è (–ø–æ –ú–°–ö), –≤ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å '
                             '–Ω–æ–≤–æ—Å—Ç–∏ –∏ —Å–≤–æ–¥–∫—É –ø–æ–≥–æ–¥—ã. –§–æ—Ä–º–∞—Ç: <b>–ß–ß:–ú–ú</b>. –ü—Ä–∏–º–µ—Ä—ã: '
                             '<b>08:20</b>, <b>22:05</b>')

    else:
        new_time = message.text
        message_to_user = change_time(user_id, new_time)
        await message.answer(message_to_user)


@dp.message_handler(commands='set_city')
async def set_city(message: types.Message):
    """–ò–∑–º–µ–Ω—è–µ—Ç –≥–æ—Ä–æ–¥, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å —Å–≤–æ–¥–∫—É –ø–æ–≥–æ–¥—ã"""
    user_id = message.from_user.id
    user_name = str(message.from_user.full_name)
    db.add_new_user(user_id, user_name)

    section = 'progress'
    parameter = 'set_city'
    db.change_user_parameter(user_id, section, parameter)

    if message.text == '/set_city':
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —Å–≤–æ–¥–∫—É –ø–æ–≥–æ–¥—ã.\n–ü—Ä–∏–º–µ—Ä—ã: '
                             '<b>–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥</b>, <b>–ö–∏–µ–≤</b>, <b>–ë—Ä—è–Ω—Å–∫</b>')

    else:
        new_city = message.text
        message_to_user = change_city(user_id, new_city)
        await message.answer(message_to_user)


@dp.message_handler(commands='set_news_topic')
async def set_news_topic(message: types.Message):
    """–ò–∑–º–µ–Ω—è–µ—Ç –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –æ—Ç–±–∏—Ä–∞—é—Ç—Å—è –Ω–æ–≤–æ—Å—Ç–∏"""
    user_id = message.from_user.id
    user_name = str(message.from_user.full_name)
    db.add_new_user(user_id, user_name)

    section = 'progress'
    parameter = 'set_news_topic'
    db.change_user_parameter(user_id, section, parameter)

    if message.text == '/set_news_topic':
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ (—Ñ—Ä–∞–∑—É), –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É(–æ–π) –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏.\n'
                             '–ü—Ä–∏–º–µ—Ä—ã: <b>Apple</b>, <b>–ë–∏–∑–Ω–µ—Å</b>, <b>–ò–ª–æ–Ω –ú–∞—Å–∫</b>\n\n'
                             '<b>P.S.</b> <i>–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —Å–∞–º—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∑–∞—Ä—É–±–µ–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏, –≤–≤–µ–¥–∏—Ç–µ '
                             '–∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ (—Ñ—Ä–∞–∑—É) –Ω–∞ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ</i>')

    else:
        new_news_topic = message.text
        message_to_user = change_news_topic(user_id, new_news_topic)
        await message.answer(message_to_user)


@dp.message_handler(commands='reset')
async def reset_settings(message: types.Message):
    user_id = message.from_user.id
    user_name = str(message.from_user.full_name)
    db.add_new_user(user_id, user_name)

    section = 'progress'
    parameter = 'reset'
    db.change_user_parameter(user_id, section, parameter)

    db.delete_user_info(user_id)
    await message.answer('‚úî<i>–°—Ç–∞—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!</i>\n'
                         '‚úî<i>–ù–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!</i>\n\n'
                         '<b>–¢–µ–ø–µ—Ä—å, –≤—ã –±—É–¥–µ—Ç–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –æ–¥–Ω—É –Ω–æ–≤–æ—Å—Ç—å –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É "–†–æ—Å—Å–∏—è" '
                         '–∏ –ø–æ–≥–æ–¥—É –∏–∑ –ú–æ—Å–∫–≤—ã –≤ 08:00 –ø–æ –ú–°–ö</b>')

    db.add_new_user(user_id, user_name)


@dp.message_handler(commands='set_status')
async def set_status(message: types.Message):
    user_id = message.from_user.id
    user_name = str(message.from_user.full_name)
    db.add_new_user(user_id, user_name)

    message_to_user = change_status(user_id)
    await message.answer(message_to_user)


@dp.message_handler(commands='set_quantity_news')
async def set_quantity_news_buttons(message: types.Message):
    """–ò–∑–º–µ–Ω—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤–æ—Å—Ç–µ–π, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"""
    user_id = message.from_user.id
    user_name = str(message.from_user.full_name)

    db.add_new_user(user_id, user_name)

    section = 'progress'
    parameter = 'set_quantity_news'
    db.change_user_parameter(user_id, section, parameter)

    markup = types.InlineKeyboardMarkup(
        inline_keyboard=[
            [
                types.InlineKeyboardButton(text="1", callback_data='news_1'),
                types.InlineKeyboardButton(text="2", callback_data='news_2'),
                types.InlineKeyboardButton(text="3", callback_data='news_3'),
            ],
            [
                types.InlineKeyboardButton(text="4", callback_data='news_4'),
                types.InlineKeyboardButton(text="5", callback_data='news_5'),
            ],
            [
                types.InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data='news_cancel'),
            ]
        ]
    )

    await message.answer('–í—ã–±–µ—Ä–µ—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤–æ—Å—Ç–µ–π, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å. –ï—Å–ª–∏ –≤—ã –ø–µ—Ä–µ–¥—É–º–∞–ª–∏ –∏–∑–º–µ–Ω—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ, '
                         '–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>–û—Ç–º–µ–Ω–∞</b>', reply_markup=markup)


@dp.callback_query_handler(text_contains='news_')
async def change_quantity_news(call: types.CallbackQuery):
    user_id = call.from_user.id
    user_name = str(call.from_user.full_name)
    db.add_new_user(user_id, user_name)

    await call.answer(cache_time=10)

    callback_data = str(call.data).replace('news_', '')

    if callback_data.isdigit():
        section = 'quantity_news'
        old_quantity_news = db.get_user_parameter(user_id, section)
        message_to_user = f'‚úî–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤–æ—Å—Ç–µ–π <b>{old_quantity_news}</b> —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ!\n'

        parameter = callback_data
        db.change_user_parameter(user_id, section, parameter)

        message_to_user += f'‚úî–¢–µ–ø–µ—Ä—å, –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ <b>{callback_data}</b> –∑–∞ —Ä–∞–∑!'
        await call.message.answer(message_to_user)

    else:
        await call.message.answer(f'<b>–î–µ–π—Å—Ç–≤–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–æ</b>, —Å–∫—Ä—ã–≤–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ÉüòÉ')

    await call.message.edit_reply_markup(reply_markup=None)


@dp.message_handler(commands='donate')
async def donate_buttons(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è—Ç –∫–Ω–æ–ø–∫–∏"""
    user_id = message.from_user.id
    user_name = str(message.from_user.full_name)
    db.add_new_user(user_id, user_name)

    section = 'progress'
    parameter = 'donate'
    db.change_user_parameter(user_id, section, parameter)

    markup = types.InlineKeyboardMarkup(
        inline_keyboard=[
            [types.InlineKeyboardButton(text="QIWI", url='qiwi.com/n/ANDRUS', callback_data='donate_QIWI')],
            [types.InlineKeyboardButton(text="–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã (–°–±–µ—Ä–±–∞–Ω–∫)", callback_data='donate_Sberbank')],
            [types.InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data='donate_cancel')]
        ]
    )

    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç —á–µ—Ä–µ–∑ <b>QIWI</b>, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, '
                         '–ø–æ—Å–ª–µ –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞–∂–º–∏—Ç–µ <b>–û—Ç–º–µ–Ω–∞</b>, –∏–Ω–∞—á–µ –∫–Ω–æ–ø–∫–∏ –Ω–µ –ø—Ä–æ–ø–∞–¥—É—Ç', reply_markup=markup)


@dp.callback_query_handler(text_contains='donate_')
async def donation(call: types.CallbackQuery):
    user_id = call.from_user.id
    user_name = str(call.from_user.full_name)
    db.add_new_user(user_id, user_name)

    await call.answer(cache_time=10)

    callback_data = str(call.data).replace('donate_', '')

    if callback_data == 'Sberbank':
        await call.message.answer(f'–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã (–°–±–µ—Ä–±–∞–Ω–∫): <b>{keys.CARD_NUMBER} - {keys.MY_NAME}</b>')

    await call.message.answer('<i>–ï—Å–ª–∏ –≤—ã –∑–∞–¥–æ–Ω–∞—Ç–∏–ª–∏, –±–æ–ª—å—à–æ–µ —Å–ø–∞—Å–∏–±–æ! –í—ã –æ—á–µ–Ω—å –º–æ—Ç–∏–≤–∏—Ä—É–µ—Ç–µ –º–µ–Ω—è –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É '
                              '–∏ —É–ª—É—á—à–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –±–æ—Ç–∞!üñ§\n–ï—Å–ª–∏ –≤—ã –ø—Ä–æ—Å—Ç–æ –µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, '
                              '—Ç–æ –∑–Ω–∞–π—Ç–µ, —á—Ç–æ —Ç–æ–∂–µ –æ—á–µ–Ω—å –ø–æ–º–æ–≥–∞–µ—Ç–µ –ø—Ä–æ–µ–∫—Ç—É, –ø—Ä–æ–¥–≤–∏–≥–∞–µ—Ç–µ –µ–≥–æ —Å—Ä–µ–¥–∏ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö!</i>üòä')

    await call.message.edit_reply_markup(reply_markup=None)


@dp.message_handler(commands='check_params')
async def check_params(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = message.from_user.id
    user_name = str(message.from_user.full_name)
    db.add_new_user(user_id, user_name)

    user_params = get_all_user_info(user_id)
    await message.answer(f'–û—Ç–ø—Ä–∞–≤–ª—è—é –≤–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n\n{user_params}\n\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —á—Ç–æ-–ª–∏–±–æ, '
                         f'–≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –æ—Å—Ç–∞–ª—å–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏!üòÉ')


@dp.message_handler()
async def message_control(message: types.Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –í —Ñ—É–Ω–∫—Ü–∏—è—Ö, –ø—Ä–∏ –≤–≤–æ–¥–µ –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ –∫–æ–º–∞–Ω–¥—ã,
    –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –æ–±—Ä–∞—Ç–Ω–æ –≤ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é, –≤ –∫–æ—Ç–æ—Ä–æ–π –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è"""
    user_id = message.from_user.id
    user_name = str(message.from_user.full_name)
    db.add_new_user(user_id, user_name)

    section = 'progress'
    command = db.get_user_parameter(user_id, section)

    try:
        await globals()[command](message)

    except Exception as error:
        print(error)
        await message.answer(template_messages.not_correct_message)


if __name__ == '__main__':
    executor.start_polling(dp)
